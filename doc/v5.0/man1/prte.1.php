.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "prte" "1" "" "2021-08-23" "PRRTE"
.hy
.SH NAME
.PP
prte - Establish a PRTE Distributed Virtual Machine (DVM).
.SH SYNOPSIS
.IP
.nf
\f[C]
prte [ options ]
\f[R]
.fi
.PP
Invoking \f[C]prte\f[R] via an absolute path name is equivalent to
specifying the \f[C]--prefix\f[R] option with a \f[C]<dir>\f[R] value
equivalent to the directory where \f[C]prte\f[R] resides, minus its last
subdirectory.
For example:
.IP
.nf
\f[C]
$ /usr/local/bin/prte ...
\f[R]
.fi
.PP
is equivalent to
.IP
.nf
\f[C]
$ prte --prefix /usr/local ...
\f[R]
.fi
.SH QUICK SUMMARY
.PP
\f[C]prte\f[R] will establish a DVM that can be used to execute
subsequent applications.
Use of \f[C]prte\f[R] can be advantageous, for example, when you want to
execute a number of short-lived tasks (e.g., in a workflow scenario).
In such cases, the time required to start the PRTE DVM can be a
significant fraction of the time to execute the overall application.
Thus, creating a persistent PRTE DVM can speed the overall execution.
In addition, a persistent PRTE DVM will support executing multiple
parallel applications while maintaining separation between their
respective cores.
.SH OPTIONS
.PP
This section includes many commonly used options.
There may be other options listed with \f[C]prte --help\f[R].
.TP
\f[B]\f[CB]-h, --help\f[B]\f[R]
Display help for this command
.TP
\f[B]\f[CB]-V, --version\f[B]\f[R]
Print version number.
If no other arguments are given, this will also cause \f[C]prte\f[R] to
exit.
.TP
\f[B]\f[CB]--daemonize\f[B]\f[R]
Daemonize the DVM daemons into the background
.TP
\f[B]\f[CB]--no-ready-msg\f[B]\f[R]
Do not print a DVM ready message
.TP
\f[B]\f[CB]--report-pid <arg0>\f[B]\f[R]
Print out \f[C]prte\f[R]\[cq]s PID during startup.
The \f[C]<arg0>\f[R] must be a \f[C]-\f[R] to indicate that the PID is
to be output to \f[C]stdout\f[R], a \f[C]+\f[R] to indicate that the PID
is to be output to \f[C]stderr\f[R], or a filename to which the PID is
to be written.
.TP
\f[B]\f[CB]--report-uri <arg0>\f[B]\f[R]
Print out \f[C]prte\f[R]\[cq]s URI during startup.
The \f[C]<arg0>\f[R] must be a \f[C]-\f[R] to indicate that the URI is
to be output to \f[C]stdout\f[R], a \f[C]+\f[R] to indicate that the URI
is to be output to \f[C]stderr\f[R], or a filename to which the URI is
to be written.
.TP
\f[B]\f[CB]--system-server\f[B]\f[R]
Start the DVM as the system server
.TP
\f[B]\f[CB]--prefix <dir>\f[B]\f[R]
Prefix directory that will be used to set the \f[C]PATH\f[R] and
\f[C]LD_LIBRARY_PATH\f[R] on the remote node before invoking the PRTE
daemon.
.PP
Use one of the following options to specify which hosts (nodes) of the
cluster to use for the DVM.
See prte-map(1) for more details.
.TP
\f[B]\f[CB]-H, --host <host1,host2,...,hostN>\f[B]\f[R]
List of hosts for the DVM.
.TP
\f[B]\f[CB]--hostfile <hostfile>\f[B]\f[R]
Provide a hostfile to use.
.TP
\f[B]\f[CB]--machinefile <machinefile>\f[B]\f[R]
Synonym for \f[C]-hostfile\f[R].
.PP
Setting MCA parameters:
.TP
\f[B]\f[CB]--gpmixmca <key> <value>\f[B]\f[R]
Pass global PMIx MCA parameters that are applicable to all application
contexts.
\f[C]<key>\f[R] is the parameter name; \f[C]<value>\f[R] is the
parameter value.
.TP
\f[B]\f[CB]--mca <key> <value>\f[B]\f[R]
Send arguments to various MCA modules.
See the \[lq]MCA\[rq] section, below.
.TP
\f[B]\f[CB]--pmixmca <key> <value>\f[B]\f[R]
Send arguments to various PMIx MCA modules.
See the \[lq]MCA\[rq] section, below.
.TP
\f[B]\f[CB]--prtemca <key> <value>\f[B]\f[R]
Send arguments to various PRTE MCA modules.
See the \[lq]MCA\[rq] section, below.
.TP
\f[B]\f[CB]--pmixam <arg0>\f[B]\f[R]
Aggregate PMIx MCA parameter set file list.
The \f[C]arg0\f[R] argument is a comma-separated list of tuning files.
Each file containing MCA parameter sets for this application context.
.PP
The following options are useful for developers; they are not generally
useful to most PRTE users:
.TP
\f[B]\f[CB]-d, --debug-devel\f[B]\f[R]
Enable debugging of the PRTE layer.
.TP
\f[B]\f[CB]--debug-daemons-file\f[B]\f[R]
Enable debugging of the PRTE daemons in the DVM, storing output in
files.
.SH DESCRIPTION
.PP
\f[C]prte\f[R] starts a Distributed Virtual Machine (DVM) by launching a
daemon on each node of the allocation, as modified or specified by the
\f[C]--host\f[R] and \f[C]--hostfile\f[R] options (See prte-map(1) for
more details).
Applications can subsequently be executed using the \f[C]prun\f[R]
command.
The DVM remains in operation until receiving the \f[C]pterm\f[R]
command.
.PP
When starting the Distributed Virtual Machine (DVM), \f[C]prte\f[R] will
prefer to use the process starter provided by a supported resource
manager to start the \f[C]prted\f[R] daemons on the allocated compute
nodes.
If a supported resource manager or process starter is not available then
\f[C]rsh\f[R] or \f[C]ssh\f[R] are used with a corresponding hostfile,
or if no hostfile is provided then all \f[C]X\f[R] copies are run on the
\f[C]localhost\f[R].
.SH RETURN VALUE
.PP
\f[C]prte\f[R] returns \f[C]0\f[R] if no abnormal daemon failure occurs
during the life of the DVM, and non-zero otherwise.
