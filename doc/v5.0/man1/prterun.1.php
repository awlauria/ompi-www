.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "prterun" "1" "" "2021-08-23" "PRRTE"
.hy
.SH NAME
.PP
prterun - Execute serial and parallel jobs with the PMIx Reference
Runtime (PRTE).
.SH SYNOPSIS
.PP
\f[C]prterun\f[R] does \f[B]not\f[R] require a running \f[C]prte\f[R]
Distributed Virtual Machine (DVM).
It will start the \f[C]prte\f[R] DVM, run a single job, and shutdown the
DVM.
.PP
Single Process Multiple Data (SPMD) Model:
.IP
.nf
\f[C]
prterun [ options ] <program> [ <args> ]
\f[R]
.fi
.PP
Multiple Instruction Multiple Data (MIMD) Model:
.IP
.nf
\f[C]
prterun [ global_options ] \[rs]
        [ local_options1 ] <program1> [ <args1> ] : \[rs]
        [ local_options2 ] <program2> [ <args2> ] : \[rs]
        ... : \[rs]
        [ local_optionsN ] <programN> [ <argsN> ]
\f[R]
.fi
.PP
Note that in both models, invoking \f[C]prterun\f[R] via an absolute
path name is equivalent to specifying the \f[C]--prefix\f[R] option with
a \f[C]<dir>\f[R] value equivalent to the directory where
\f[C]prterun\f[R] resides, minus its last subdirectory.
For example:
.IP
.nf
\f[C]
$ /usr/local/bin/prterun ...
\f[R]
.fi
.PP
is equivalent to
.IP
.nf
\f[C]
$ prterun --prefix /usr/local
\f[R]
.fi
.SH QUICK SUMMARY
.PP
If you are simply looking for how to run an application, you probably
want to use a command line of the following form:
.IP
.nf
\f[C]
$ prterun [ -np X ] [ --hostfile <filename> ] <program>
\f[R]
.fi
.PP
This will run \f[C]X\f[R] copies of \f[C]<program>\f[R] in your current
run-time environment over the set of hosts specified by
\f[C]<filename>\f[R], scheduling (by default) in a round-robin fashion
by CPU slot.
If running under a supported resource manager a hostfile is usually not
required unless the caller wishes to further restrict the set of
resources used for that job.
.SH OPTIONS
.PP
This section includes many commonly used options.
There may be other options listed with \f[C]prterun --help\f[R].
.PP
\f[C]prterun\f[R] will send the name of the directory where it was
invoked on the local node to each of the remote nodes, and attempt to
change to that directory.
See the \[lq]Current Working Directory\[rq] section below for further
details.
.TP
\f[B]\f[CB]<program>\f[B]\f[R]
The program executable.
This is identified as the first non-recognized argument to
\f[C]prterun\f[R].
.TP
\f[B]\f[CB]<args>\f[B]\f[R]
Pass these run-time arguments to every new process.
These must always be the last arguments to \f[C]prterun\f[R] after the
\f[C]<program>\f[R].
If an app context file is used, \f[C]<args>\f[R] will be ignored.
.TP
\f[B]\f[CB]-h, --help\f[B]\f[R]
Display help for this command
.TP
\f[B]\f[CB]-V, --version\f[B]\f[R]
Print version number.
If no other arguments are given, this will also cause \f[C]prterun\f[R]
to exit.
.PP
Since \f[C]prterun\f[R] combines both \f[C]prte\f[R] and \f[C]prun\f[R]
it accepts all of the command line arguments from both of these tools.
See prte(1) and prun(1) for details on the command line options.
See prte-map(1) for more details on mapping, ranking, and binding
options.
.SH DESCRIPTION
.PP
One invocation of \f[C]prterun\f[R] starts the PRTE DVM (i.e.,
\f[C]prte\f[R]), runs a single job (similar to \f[C]prun\f[R]), then
terminates the DVM (similar to \f[C]pterm\f[R]).
If the application is single process multiple data (SPMD), the
application can be specified on the \f[C]prterun\f[R] command line.
.PP
If the application is multiple instruction multiple data (MIMD),
comprising of multiple programs, the set of programs and argument can be
specified in one of two ways: Extended Command Line Arguments, and
Application Context.
.PP
An application context describes the MIMD program set including all
arguments in a separate file.
This file essentially contains multiple \f[C]prterun\f[R] command lines,
less the command name itself.
The ability to specify different options for different instantiations of
a program is another reason to use an application context.
.PP
Extended command line arguments allow for the description of the
application layout on the command line using colons (\f[C]:\f[R]) to
separate the specification of programs and arguments.
Some options are globally set across all specified programs
(e.g.\ \f[C]--hostfile\f[R]), while others are specific to a single
program (e.g.\ \f[C]--np\f[R]).
.SH RETURN VALUE
.PP
See prun(1) for details.
