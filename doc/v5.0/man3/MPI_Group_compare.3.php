.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Group_compare" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Group_compare\f[R] - Compares two groups.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Group_compare(MPI_Group group1, MPI_Group group2,
    int *result)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_GROUP_COMPARE(GROUP1, GROUP2, RESULT, IERROR)
    INTEGER GROUP1, GROUP2, RESULT, IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Group_compare(group1, group2, result, ierror)
    TYPE(MPI_Group), INTENT(IN) :: group1, group2
    INTEGER, INTENT(OUT) :: result
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]group1\f[R] : First group (handle).
.IP \[bu] 2
\f[C]group2\f[R] : Second group (handle).
.SH Output Parameters
.IP \[bu] 2
\f[C]result\f[R] : Integer which is MPI_IDENT if the order and members
of the two groups are the same, MPI_SIMILAR if only the members are the
same, and MPI_UNEQUAL otherwise.
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_IDENT\f[R] results if the group members and group order is
exactly the same in both groups.
This happens for instance if \f[C]group1\f[R] and \f[C]group2\f[R] are
the same handle.
\f[C]MPI_SIMILAR\f[R] results if the group members are the same but the
order is different.
\f[C]MPI_UNEQUAL\f[R] results otherwise.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
