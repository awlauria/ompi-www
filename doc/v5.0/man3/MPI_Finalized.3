.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Finalized" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Finalized\f[R] - Checks whether MPI has been finalized
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Finalized(int *flag)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_FINALIZED(FLAG, IERROR)
    LOGICAL FLAG
    INTEGER IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Finalized(flag, ierror)
    LOGICAL, INTENT(OUT) :: flag
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Output Parameter
.IP \[bu] 2
\f[C]flag\f[R] : True if MPI was finalized, and false otherwise
(logical).
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
This routine may be used to determine whether MPI has been finalized.
It is one of a small number of routines that may be called before MPI is
initialized and after MPI has been finalized (\f[C]MPI_Initialized\f[R]
is another).
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Init\f[R](3) \f[C]MPI_Init_thread\f[R](3)
\f[C]MPI_Initialized\f[R](3) \f[C]MPI_Finalize\f[R](3)
