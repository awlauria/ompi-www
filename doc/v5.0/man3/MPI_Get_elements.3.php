.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Get_elements" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Get_elements\f[R], \f[C]MPI_Get_elements_x\f[R] - Returns the
number of basic elements in a data type.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Get_elements(const MPI_Status *status, MPI_Datatype datatype,
    int *count)

int MPI_Get_elements_x(const MPI_Status *status, MPI_Datatype datatype,
    MPI_Count *count)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_GET_ELEMENTS(STATUS, DATATYPE, COUNT, IERROR)
    INTEGER STATUS(MPI_STATUS_SIZE), DATATYPE, COUNT, IERROR

MPI_GET_ELEMENTS_X(STATUS, DATATYPE, COUNT, IERROR)
    INTEGER STATUS(MPI_STATUS_SIZE), DATATYPE
        INTEGER(KIND=MPI_COUNT_KIND) COUNT
        INTEGER IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Get_elements(status, datatype, count, ierror)
    TYPE(MPI_Status), INTENT(IN) :: status
    TYPE(MPI_Datatype), INTENT(IN) :: datatype
    INTEGER, INTENT(OUT) :: count
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror

MPI_Get_elements_x(status, datatype, count, ierror)
    TYPE(MPI_Status), INTENT(IN) :: status
    TYPE(MPI_Datatype), INTENT(IN) :: datatype
    INTEGER(KIND = MPI_COUNT_KIND), INTENT(OUT) :: count
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]status\f[R] : Return status of receive operation (status).
.IP \[bu] 2
\f[C]datatype\f[R] : Datatype used by receive operation (handle).
.SH Output Parameters
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Get_elements\f[R] and \f[C]MPI_Get_elements_x\f[R] behave
different from \f[C]MPI_Get_count\f[R], which returns the number of
\[lq]top-level entries\[rq] received, i.e., the number of
\[lq]copies\[rq] of type \f[C]datatype\f[R].
\f[C]MPI_Get_count\f[R] may return any integer value k, where 0 =< k =<
count.
If \f[C]MPI_Get_count\f[R] returns k, then the number of basic elements
received (and the value returned by \f[C]MPI_Get_elements\f[R] and
\f[C]MPI_Get_elements_x\f[R]) is n k, where n is the number of basic
elements in the type map of \f[C]datatype\f[R].
If the number of basic elements received is not a multiple of n, that
is, if the receive operation has not received an integral number of
\f[C]datatype\f[R] \[lq]copies,\[rq] then \f[C]MPI_Get_count\f[R]
returns the value \f[C]MPI_UNDEFINED.\f[R] For both functions, if the
count parameter cannot express the value to be returned (e.g., if the
parameter is too small to hold the output value), it is set to
\f[C]MPI_UNDEFINED\f[R].
.PP
Example: Usage of \f[C]MPI_Get_count\f[R] and \f[C]MPI_Get_element\f[R]:
.IP
.nf
\f[C]
//...
MPI_TYPE_CONTIGUOUS(2, MPI_REAL, Type2, ierr)
MPI_TYPE_COMMIT(Type2, ierr)
//      ...
MPI_COMM_RANK(comm, rank, ierr)
IF(rank.EQ.0) THEN
    CALL MPI_SEND(a, 2, MPI_REAL, 1, 0, comm, ierr)
    CALL MPI_SEND(a, 3, MPI_REAL, 1, 0, comm, ierr)
ELSE
    CALL MPI_RECV(a, 2, Type2, 0, 0, comm, stat, ierr)
    CALL MPI_GET_COUNT(stat, Type2, i, ierr)     ! returns i=1
    CALL MPI_GET_ELEMENTS(stat, Type2, i, ierr)  ! returns i=2
    CALL MPI_RECV(a, 2, Type2, 0, 0, comm, stat, ierr)
    CALL MPI_GET_COUNT(stat, Type2, i, ierr) ! returns i=MPI_UNDEFINED

    CALL MPI_GET_ELEMENTS(stat, Type2, i, ierr)  ! returns i=3
END IF
\f[R]
.fi
.PP
The function \f[C]MPI_Get_elements\f[R] can also be used after a probe
to find the number of elements in the probed message.
Note that the two functions \f[C]MPI_Get_count\f[R] and
\f[C]MPI_Get_elements\f[R] return the same values when they are used
with primitive data types.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH Fortran 77 Notes
.PP
The MPI standard prescribes portable Fortran syntax for the COUNT
argument of \f[C]MPI_Get_elements_x\f[R] only for Fortran 90.
FORTRAN 77 users may use the non-portable syntax
.IP
.nf
\f[C]
INTEGER*MPI_COUNT_KIND COUNT
\f[R]
.fi
.PP
where \f[C]MPI_COUNT_KIND\f[R] is a constant defined in mpif.h and gives
the length of the declared integer in bytes.
.SH See Also
.PP
\f[C]MPI_Get_count\f[R](3)
