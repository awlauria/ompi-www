.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Group_incl" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Group_incl\f[R] - Produces a group by reordering an existing
group and taking only listed members.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Group_incl(MPI_Group group, int n, const int ranks[],
    MPI_Group *newgroup)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_GROUP_INCL(GROUP, N, RANKS, NEWGROUP, IERROR)
    INTEGER GROUP, N, RANKS(*), NEWGROUP, IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Group_incl(group, n, ranks, newgroup, ierror)
    TYPE(MPI_Group), INTENT(IN) :: group
    INTEGER, INTENT(IN) :: n, ranks(n)
    TYPE(MPI_Group), INTENT(OUT) :: newgroup
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]group\f[R] : Group (handle).
.IP \[bu] 2
\f[C]n\f[R] : Number of elements in array ranks (and size of
\f[C]newgroup\f[R])(integer).
.IP \[bu] 2
\f[C]ranks\f[R] : Ranks of processes in group to appear in newgroup
(array of integers).
.SH Output Parameters
.IP \[bu] 2
\f[C]newgroup\f[R] : New group derived from above, in the order defined
by ranks (handle).
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
The function \f[C]MPI_Group_incl\f[R] creates a group
\f[C]group_out\f[R] that consists of the n processes in \f[C]group\f[R]
with ranks \f[C]rank[0]\f[R], \&..., \f[C]rank[n-1]\f[R]; the process
with rank i in \f[C]group_out\f[R] is the process with rank
\f[C]ranks[i]\f[R] in \f[C]group\f[R].
Each of the n elements of ranks must be a valid rank in \f[C]group\f[R]
and all elements must be distinct, or else the program is erroneous.
If \f[C]n\f[R] = 0, then \f[C]group_out\f[R] is
\f[C]MPI_GROUP_EMPTY\f[R].
This function can, for instance, be used to reorder the elements of a
\f[C]group\f[R].
.SH Note
.PP
This implementation does not currently check to ensure that there are no
duplicates in the list of ranks.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Group_compare\f[R](3) \f[C]MPI_Group_range_incl\f[R](3)
\f[C]MPI_Group_free\f[R](3)
