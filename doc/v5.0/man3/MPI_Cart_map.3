.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Cart_map" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Cart_map\f[R] - Maps process to Cartesian topology information.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Cart_map(MPI_Comm comm, int ndims, const int dims[],
    const int periods[], int *newrank)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_CART_MAP(COMM, NDIMS, DIMS, PERIODS, NEWRANK, IERROR)
    INTEGER COMM, NDIMS, DIMS(*), NEWRANK, IERROR
    LOGICAL PERIODS(*)
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Cart_map(comm, ndims, dims, periods, newrank, ierror)
    TYPE(MPI_Comm), INTENT(IN) :: comm
    INTEGER, INTENT(IN) :: ndims, dims(ndims)
    LOGICAL, INTENT(IN) :: periods(ndims)
    INTEGER, INTENT(OUT) :: newrank
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]comm\f[R] : Input communicator (handle).
.IP \[bu] 2
\f[C]ndims\f[R] : Number of dimensions of Cartesian structure (integer).
.IP \[bu] 2
\f[C]dims\f[R] : Integer array of size ndims specifying the number of
processes in each coordinate direction.
.IP \[bu] 2
\f[C]periods\f[R] : Logical array of size ndims specifying the
periodicity specification in each coordinate direction.
.SH Output Parameters
.IP \[bu] 2
\f[C]newrank\f[R] : Reordered rank of the calling process;
\f[C]MPI_UNDEFINED\f[R] if calling process does not belong to grid
(integer).
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Cart_map\f[R] and \f[C]MPI_Graph_map\f[R] can be used to
implement all other topology functions.
In general they will not be called by the user directly, unless he or
she is creating additional virtual topology capability other than that
provided by MPI.
\f[C]MPI_Cart_map\f[R] computes an \[lq]optimal\[rq] placement for the
calling process on the physical machine.
A possible implementation of this function is to always return the rank
of the calling process, that is, not to perform any reordering.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Graph_map\f[R](3)
