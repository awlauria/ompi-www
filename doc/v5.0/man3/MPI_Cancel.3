.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Cancel" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Cancel\f[R] - Cancels a communication request.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Cancel(MPI_Request *request)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_CANCEL(REQUEST, IERROR)
    INTEGER REQUEST, IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Cancel(request, ierror)
    TYPE(MPI_Request), INTENT(IN) :: request
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameter
.IP \[bu] 2
\f[C]request\f[R] : Communication request (handle).
.SH Output Parameter
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
The \f[C]MPI_Cancel\f[R] operation allows pending communications to be
canceled.
This is required for cleanup.
Posting a send or a receive ties up user resources (send or receive
buffers), and a cancel may be needed to free these resources gracefully.
.PP
A call to \f[C]MPI_Cancel\f[R] marks for cancellation a pending,
nonblocking communication operation (send or receive).
The cancel call is local.
It returns immediately, possibly before the communication is actually
canceled.
It is still necessary to complete a communication that has been marked
for cancellation, using a call to \f[C]MPI_Request_free,\f[R]
\f[C]MPI_Wait\f[R], or \f[C]MPI_Test\f[R] (or any of the derived
operations).
.PP
If a communication is marked for cancellation, then an
\f[C]MPI_Wait\f[R] call for that communication is guaranteed to return,
irrespective of the activities of other processes (i.e.,
\f[C]MPI_Wait\f[R] behaves as a local function); similarly if
\f[C]MPI_Test\f[R] is repeatedly called in a busy wait loop for a
canceled communication, then \f[C]MPI_Test\f[R] will eventually be
successful.
.PP
\f[C]MPI_Cancel\f[R] can be used to cancel a communication that uses a
persistent \f[C]request\f[R] (see Section 3.9 in the MPI-1 Standard,
\[lq]Persistent Communication Requests\[rq]) in the same way it is used
for nonpersistent \f[C]request\f[R]s.
A successful cancellation cancels the active communication, but not the
\f[C]request\f[R] itself.
After the call to \f[C]MPI_Cancel\f[R] and the subsequent call to
\f[C]MPI_Wait\f[R] or \f[C]MPI_Test\f[R], the \f[C]request\f[R] becomes
inactive and can be activated for a new communication.
.PP
The successful cancellation of a buffered send frees the buffer space
occupied by the pending message.
.PP
Either the cancellation succeeds or the communication succeeds, but not
both.
If a send is marked for cancellation, then it must be the case that
either the send completes normally, in which case the message sent is
received at the destination process, or that the send is successfully
canceled, in which case no part of the message is received at the
destination.
Then, any matching receive has to be satisfied by another send.
If a receive is marked for cancellation, then it must be the case that
either the receive completes normally, or that the receive is
successfully canceled, in which case no part of the receive buffer is
altered.
Then, any matching send has to be satisfied by another receive.
.PP
If the operation has been canceled, then information to that effect will
be returned in the status argument of the operation that completes the
communication.
.SH Notes
.PP
The primary expected use of \f[C]MPI_Cancel\f[R] is in multi-buffering
schemes, where speculative \f[C]MPI_Irecvs\f[R] are made.
When the computation completes, some of these \f[C]request\f[R]s may
remain; using \f[C]MPI_Cancel\f[R] allows the user to cancel these
unsatisfied \f[C]request\f[R]s.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Probe\f[R](3) \f[C]MPI_Iprobe\f[R](3)
\f[C]MPI_Test_cancelled\f[R](3) \f[C]MPI_Cart_coords\f[R](3)
