.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Get" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Get\f[R], \f[C]MPI_Rget\f[R] - Copies data from the target
memory to the origin.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

MPI_Get(void *origin_addr, int origin_count, MPI_Datatype
    origin_datatype, int target_rank, MPI_Aint target_disp,
    int target_count, MPI_Datatype target_datatype, MPI_Win win)

MPI_Rget(void *origin_addr, int origin_count, MPI_Datatype
     origin_datatype, int target_rank, MPI_Aint target_disp,
     int target_count, MPI_Datatype target_datatype, MPI_Win win,
         MPI_Request *request)
\f[R]
.fi
.SS Fortran Syntax (See Fortran 77 Notes)
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_GET(ORIGIN_ADDR, ORIGIN_COUNT, ORIGIN_DATATYPE, TARGET_RANK,
    TARGET_DISP, TARGET_COUNT, TARGET_DATATYPE, WIN, IERROR)
    <type> ORIGIN_ADDR(*)
    INTEGER(KIND=MPI_ADDRESS_KIND) TARGET_DISP
    INTEGER ORIGIN_COUNT, ORIGIN_DATATYPE, TARGET_RANK,
    TARGET_COUNT, TARGET_DATATYPE, WIN, IERROR

MPI_RGET(ORIGIN_ADDR, ORIGIN_COUNT, ORIGIN_DATATYPE, TARGET_RANK,
     TARGET_DISP, TARGET_COUNT, TARGET_DATATYPE, WIN, REQUEST, IERROR)
     <type> ORIGIN_ADDR(*)
     INTEGER(KIND=MPI_ADDRESS_KIND) TARGET_DISP
     INTEGER ORIGIN_COUNT, ORIGIN_DATATYPE, TARGET_RANK,
     TARGET_COUNT, TARGET_DATATYPE, WIN, REQUEST, IERROR
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Get(origin_addr, origin_count, origin_datatype, target_rank,
        target_disp, target_count, target_datatype, win, ierror)
    TYPE(*), DIMENSION(..), ASYNCHRONOUS :: origin_addr
    INTEGER, INTENT(IN) :: origin_count, target_rank, target_count
    TYPE(MPI_Datatype), INTENT(IN) :: origin_datatype, target_datatype
    INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: target_disp
    TYPE(MPI_Win), INTENT(IN) :: win
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror

MPI_Rget(origin_addr, origin_count, origin_datatype, target_rank,
    target_disp, target_count, target_datatype, win, request,
        ierror)
    TYPE(*), DIMENSION(..), ASYNCHRONOUS :: origin_addr
    INTEGER, INTENT(IN) :: origin_count, target_rank, target_count
    TYPE(MPI_Datatype), INTENT(IN) :: origin_datatype, target_datatype
    INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: target_disp
    TYPE(MPI_Win), INTENT(IN) :: win
    TYPE(MPI_Request), INTENT(OUT) :: request
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]origin_addr\f[R] : Initial address of origin buffer (choice).
.IP \[bu] 2
\f[C]origin_count\f[R] : Number of entries in origin buffer (nonnegative
integer).
.IP \[bu] 2
\f[C]origin_datatype\f[R] : Data type of each entry in origin buffer
(handle).
.IP \[bu] 2
\f[C]target_rank\f[R] : Rank of target (nonnegative integer).
.IP \[bu] 2
\f[C]target_disp\f[R] : Displacement from window start to the beginning
of the target buffer (nonnegative integer).
.IP \[bu] 2
\f[C]target_count\f[R] : Number of entries in target buffer (nonnegative
integer).
.IP \[bu] 2
\f[C]target datatype\f[R] : datatype of each entry in target buffer
(handle)
.IP \[bu] 2
\f[C]win\f[R] : window object used for communication (handle)
.SH Output Parameter
.IP \[bu] 2
\f[C]request\f[R] : MPI_Rget: RMA request
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Get\f[R] copies data from the target memory to the origin,
similar to \f[C]MPI_Put\f[R], except that the direction of data transfer
is reversed.
The \f[C]origin_datatype\f[R] may not specify overlapping entries in the
origin buffer.
The target buffer must be contained within the target window, and the
copied data must fit, without truncation, in the origin buffer.
Only processes within the same node can access the target window.
.PP
\f[C]MPI_Rget\f[R] is similar to \f[C]MPI_Get\f[R], except that it
allocates a communication \f[C]request\f[R] object and associates it
with the \f[C]request\f[R] handle (the argument \f[C]request\f[R]) that
can be used to wait or test for completion.
The completion of an \f[C]MPI_Rget\f[R] operation indicates that the
data is available in the origin buffer.
If \f[C]origin_addr\f[R] points to memory attached to a window, then the
data becomes available in the private copy of this window.
.SH Fortran 77 Notes
.PP
The MPI standard prescribes portable Fortran syntax for the
\f[C]TARGET_DISP\f[R] argument only for Fortran 90.
FORTRAN 77 users may use the non-portable syntax
.IP
.nf
\f[C]
INTEGER*MPI_ADDRESS_KIND TARGET_DISP
\f[R]
.fi
.PP
where \f[C]MPI_ADDRESS_KIND\f[R] is a constant defined in mpif.h and
gives the length of the declared integer in bytes.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Put\f[R](3)
