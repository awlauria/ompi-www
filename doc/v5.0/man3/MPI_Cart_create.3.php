.\" Automatically generated by Pandoc 2.14.2
.\"
.TH "MPI_Cart_create" "3" "" "2021-08-30" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Cart_create\f[R] - Makes a new communicator to which Cartesian
topology information has been attached.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Cart_create(MPI_Comm comm_old, int ndims, const int dims[],

    const int periods[], int reorder, MPI_Comm *comm_cart)
\f[R]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE MPI
! or the older form: INCLUDE \[aq]mpif.h\[aq]

MPI_CART_CREATE(COMM_OLD, NDIMS, DIMS, PERIODS, REORDER,
        COMM_CART, IERROR)
    INTEGER COMM_OLD, NDIMS, DIMS(*), COMM_CART, IERROR
    LOGICAL PERIODS(*), REORDER
\f[R]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Cart_create(comm_old, ndims, dims, periods, reorder, comm_cart, ierror)
    TYPE(MPI_Comm), INTENT(IN) :: comm_old
    INTEGER, INTENT(IN) :: ndims, dims(ndims)
    LOGICAL, INTENT(IN) :: periods(ndims), reorder
    TYPE(MPI_Comm), INTENT(OUT) :: comm_cart
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]comm_old\f[R] : Input communicator (handle).
.IP \[bu] 2
\f[C]ndims\f[R] : Number of dimensions of Cartesian grid (integer).
.IP \[bu] 2
\f[C]dims\f[R] : Integer array of size ndims specifying the number of
processes in each dimension.
.IP \[bu] 2
\f[C]periods\f[R] : Logical array of size ndims specifying whether the
grid is periodic (true) or not (false) in each dimension.
.IP \[bu] 2
\f[C]reorder\f[R] : Ranking may be reordered (true) or not (false)
(logical).
.SH Output Parameters
.IP \[bu] 2
\f[C]comm_cart\f[R] : Communicator with new Cartesian topology (handle).
.IP \[bu] 2
\f[C]IERROR\f[R] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Cart_create\f[R] returns a handle to a new communicator to
which the Cartesian topology information is attached.
If \f[C]reorder\f[R] = false then the rank of each process in the new
group is identical to its rank in the old group.
Otherwise, the function may \f[C]reorder\f[R] the processes (possibly so
as to choose a good embedding of the virtual topology onto the physical
machine).
If the total size of the Cartesian grid is smaller than the size of the
group of comm, then some processes are returned \f[C]MPI_COMM_NULL\f[R],
in analogy to \f[C]MPI_Comm_split\f[R].
The call is erroneous if it specifies a grid that is larger than the
group size.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[R];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[R] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
